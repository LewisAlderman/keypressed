@import './variables';

section {
  --size: 250;
  display: none;
  @media screen and (min-width: 960px) {
    display: unset;
  }
  position: absolute;
  content: '';
  z-index: 0;
  width: calc(var(--size) * 1px);
  height: calc(var(--size) * 1px);
  background: orangered;
  top: calc(50% - (var(--size) * 1px / 2));
  left: calc(50% + (var(--size) * 1px / 4));
  transform: translate(-50%, -50%);
}
section:nth-of-type(1) {
  background: tomato;
  border-radius: 15%;
  // transform: translate(25%, -40%);
}
section:nth-of-type(2) {
  border-radius: 50%;
  background: rgb(0, 204, 136);
  // transform: translate(-60%, -35%);
}
section:nth-of-type(3) {
  border-radius: 30%;
  // transform: rotate(34deg) translate(-60%, -40%);
  background: lightskyblue;
}

html,
body {
  background: $bg;
  display: flex;
  flex-direction: column;
  justify-content: center;
  min-height: 100vh;
  padding: 0;
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen,
    Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;

  a {
    color: inherit;
    text-decoration: none;
  }

  * {
    box-sizing: border-box;
  }
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

blockquote,
dl,
dd,
figure,
h1,
h2,
h3,
h4,
h5,
h6,
p,
pre {
  margin: 0;
}

blockquote,
dl,
dd,
figure,
h1,
h2,
h3,
h4,
h5,
h6,
p,
pre {
  margin: 0;
}

.clearfix::after {
  content: '';
  display: table;
  clear: both;
}

::selection {
  color: #000;
  background: #fbd404;
}

p {
  max-width: 75ch;
}

a {
  color: inherit;
}

img,
video {
  max-width: 100%;
  height: auto;
}

.ellipsis {
  /* insert max-width */
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

label,
button,
input,
select {
  cursor: pointer;
}

svg {
  fill: currentColor;
}

img {
  font-style: italic;
  vertical-align: middle;
}

img:not([alt]),
img[alt=''] {
  outline: 5px solid red;
}

@media print {
  a {
    text-decoration: underline;
  }
  [href]:not([href^='#']):after {
    content: ' (' attr(href) ') ';
  }
}

abbr[title],
acronym[title],
dfn {
  cursor: help;
}

textarea {
  resize: vertical;
}

[disabled] {
  cursor: default;
}

[aria-disabled='true'] {
  cursor: default;
  pointer-events: none;
}

iframe {
  border: 0;
}

ol,
ul {
  list-style: none;
  margin: 0;
  padding: 0;
}
